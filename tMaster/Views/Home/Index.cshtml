
@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1 class="text-center">TicketMaster Roulette</h1>
    <p class="lead text-center">Let us a choose a concert for you to attend tonight...</p>
</div>
<div class="text-center"
     ng-controller="mainController as main"
     ng-cloak>
    <button id="button" ng-click="main.search()" class="btn btn-lg btn-danger">It's Lit!</button>
    <button class="btn btn-lg btn-warning">It's Not Lit</button>
    <input ng-model="main.city" />enter city
    <select ng-model="main.segmentName" 
            ng-change="main.populateClassificationList()" 
            ng-options="item.segment as item.segment for item in main.segmentsList">
        <option value="" 
                disabled 
                hidden>Choose a Category</option>
    </select>
    <select ng-model="main.classificationName" 
            ng-options="name for name in main.selectedClassificationList">
        <option value="" 
                disabled 
                hidden>Choose a Genre</option>
    </select>
    <h4>{{main.selectedItem.name}} - <a href="{{main.selectedItem.url}}">link</a> - {{main.selectedItem.dates.start.localDate}}</h4>
    <hr />
    <div ng-repeat="item in main.todaysItems">
        <h4>{{item.name}} - <a href="{{item.url}}">link</a> - {{item.dates.start.localDate}}</h4>
    </div>

</div>

@section Scripts {
    <script src="~/Scripts/sabio.js"></script>
    <script type="text/javascript">

        (function () {
            'use strict';

            angular
                .module('tmasterAPP', [])
                .controller('mainController', MainController);

            MainController.$inject = ['$http'];

            function MainController($http) {
                /* jshint validthis:true */
                var vm = this;

                var date;
                var formattedMonth;
                var ymd;
                var dateString;
                //vm.todaysItems = [];
                activate();

                function activate() {
                    date = new Date();
                    formattedMonth = date.getMonth() + 1;
                    if (formattedMonth < 10) {
                        formattedMonth = '0' + formattedMonth;
                    }
                    ymd = date.getFullYear() + '-' + formattedMonth + '-' + date.getDate();
                    vm.ymd = ymd;
                    dateString = date.getFullYear() + '-' + formattedMonth + '-' + date.getDate() + 'T00:00:00Z';
                }

                vm.search = _search;
                vm.populateClassificationList = _populateClassificationList;
                vm.selectedClassificationList = [];
                vm.segmentsList = [
                    {
                        segment: 'Music',
                        classifications: ['Alternative Rock',
                                            'Cabaret',
                                            'Classical',
                                            'Comedy',
                                            'Country',
                                            'Country and Folk',
                                            'Dance/Electronic',
                                            'Festivals',
                                            'Hard Rock/Metal',
                                            'Jazz and Blues',
                                            'Latin',
                                            'Miscellaneous',
                                            'New Age and Spiritual',
                                            'R&B/Urban Soul',
                                            'Rap and Hip-Hop',
                                            'Rock and Pop',
                                            'World Music']
                    },
                    {
                        segment: 'Arts And Theatre',
                        classifications: ['Broadway',
                                        'Off-Broadway',
                                        'Ballet and Dance',
                                        'Classical',
                                        'Comedy',
                                        'Museums and Exhibits',
                                        'Musical',
                                        'Opera',
                                        'Plays']
                    },
                    {
                        segment: 'Sports',
                        classifications: ['Baseball',
                                        'Basketball',
                                        'Boxing',
                                        'Bull Riding',
                                        'Competitions',
                                        'Curling',
                                        'Field Sports',
                                        'Football',
                                        'Golf',
                                        'Handball',
                                        'Hockey',
                                        'Lacrosse',
                                        'Mixed Martial Arts',
                                        'Motorsports',
                                        'Rodeo',
                                        'Skating',
                                        'Soccer',
                                        'Sports Packages',
                                        'Tennis',
                                        'Volleyball',
                                        'Wrestling']
                    },
                    {
                        segment: 'Family',
                        classifications: ['Children\'s Music and Theater',
                                        'Circus',
                                        'Fairs and Festivals',
                                        'Family Attractions',
                                        'Ice Shows',
                                        'Magic Shows']
                    }];

                function _getEvents(city, classificationName, dateTime) {
                    console.log('https://app.ticketmaster.com/discovery/v2/events.json?size=20&apikey=SKNvy6YgRlefbMPGovx3GGtbkAKDzXGq&city=' + city + '&startDateTime=' + dateTime + '&classificationName=' + classificationName);
                    $http({
                        method: 'GET',
                        url: 'https://app.ticketmaster.com/discovery/v2/events.json?size=20&apikey=SKNvy6YgRlefbMPGovx3GGtbkAKDzXGq&city=' + city
                                + '&startDateTime=' + dateTime
                                + '&classificationName=' + classificationName,
                    }).then(function (response) {
                        vm.todaysItems = [];
                        if (response.data._embedded) {
                            vm.items = response.data._embedded.events;
                            for (var index = 0; index < vm.items.length; index++) {
                                if (vm.items[index].dates.start.localDate == ymd) {
                                    vm.todaysItems.push(vm.items[index]);
                                }
                            }
                            console.log('todays: ', vm.todaysItems);
                            var rand = Math.random() * vm.todaysItems.length;
                            vm.selectedItem = vm.todaysItems[Math.floor(rand)];
                            console.log('selected: ', vm.selectedItem);

                        } else {
                            alert('sorry, no events found in your area. please try again');
                        }
                    }, function (response) {
                        console.log(response);
                    });
                }

                function _search() {
                    _getEvents(vm.city, vm.classificationName, dateString);
                }

                function _populateClassificationList() {
                    for (var index = 0; index < vm.segmentsList.length; index++) {
                        if (vm.segmentsList[index].segment == vm.segmentName) {
                            vm.selectedClassificationList = vm.segmentsList[index].classifications;
                        }
                    }
                    console.log(vm.selectedClassificationList);
                }
            }
        })();





        //sabio.page.startUp = function () {

        //    $("#button").on("click", sabio.page.handlers.searchEvents);

        //}

        //sabio.page.handlers.searchEvents = function () {
        //    console.log("button firing");
        //    var url = "https://app.ticketmaster.com/discovery/v2/events.json?apikey=1NxKoxkq6DbOwXVZeGfwKMnR12D3ebFC&radius=20&unit=miles&classificationName=music";
        //    console.log(url);
        //    var settings = {
        //        type: "GET",
        //        dataType: "json",
        //        async: true,
        //        error: getEventsError,
        //        success: getEventsSuccess
        //    }
        //    $.ajax(url, settings);

        //}

        //var getEventsSuccess = function (data) {
        //    console.log(data);
        //}

        //var getEventsError = function (jqXhr, status, error) {
        //    console.log(error);
        //}




    </script>

}